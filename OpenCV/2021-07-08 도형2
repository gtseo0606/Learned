opencv 도형(정사각형, 원)을 이용한 논리 연산자 구현
​
 
# 6) bitwise_or, bitwise_and, bitwise_xor, bitwise_not
​
import cv2
import numpy as np
​
img01 = np.zeros((300,300), np.uint8) #300*300의 검정색 영상
img02 = img01.copy()
img02
​
h, w = img01.shape[:2]
cx, cy = w//2, h//2
cv2.circle(img01,(cx,cy), 100, 255, -1)
# 300*300의 검정색배경, 한가운데 포인터,지름 100, 흰색,
​
#void cv::circle	(img,
#Point 	center,
#int 	radius,
#const Scalar & 	color,
#int 	thickness = 1,
#int 	lineType = LINE_8,
#int 	shift = 0
               
cv2.rectangle(img02,(0,0), (cx, h), 255, -1)
# (0,0)에서 (150,300), 흰색
​
img_or = cv2.bitwise_or(img01, img02) # 논리합
img_and = cv2.bitwise_and(img01, img02) # 논리곱
img_xor = cv2.bitwise_xor(img01, img02) # 베타 논리합
img_not = cv2.bitwise_not(img01) # 행렬 반전
​
cv2.imshow("img01" , img01)
cv2.imshow("img02" , img02)
cv2.imshow("img_or" , img_or)
cv2.imshow("img_and" , img_and)
cv2.imshow("img_xor" , img_xor)
cv2.imshow("img_not" , img_not)
​
cv2.waitKey(0)
cv2.destroyAllWindows() # 객체 소멸​
​
​
